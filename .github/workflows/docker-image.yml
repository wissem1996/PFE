name: Docker Image CI

on:
  # push:
  #   branches: [ "BaseImages" ]
  pull_request:
    branches: [ "BaseImages" ]

jobs:
  build_maven:
    runs-on: ubuntu-latest
    environment: SONAR
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build the spring app
        run: |
          mvn clean install -f ./spring-boot-server/pom.xml -DskipTests
          mvn sonar:sonar -f ./spring-boot-server/pom.xml -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
      #   with:
      #     projectBaseDir: ${{ github.workspace }}/spring-boot-server
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: spring-boot-server/target/spring-boot-jpa-postgresql-0.0.1-SNAPSHOT.jar
 
  build_node:
    runs-on: ubuntu-latest
    environment: SONAR
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.13'
      - run: |
              cd ./angular-14-client
              npm install 
              npm run build 
              ls -l ./dist/angular-14-crud-example
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        with:
          projectBaseDir: ${{ github.workspace }}//angular-14-client
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./angular-14-client/dist/angular-14-crud-example
  
  build_docker_images:
    runs-on: ubuntu-latest
    environment: DOCKERHUB
    needs:
      - build_maven  
      - build_node
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: app
          path: spring-boot-server/target

      - name: Unzip Artifact
        run: ls spring-boot-server/target/
      - name: Download Artifact dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./angular-14-client/dist/angular-14-crud-example
      - name: Unzip Artifact
        run: ls -l ./angular-14-client/dist/angular-14-crud-example
      - uses: mr-smithers-excellent/docker-build-push@v6
        id: build-image-backend
        name: build-image-backend
        with:
          image: wissemgh5/pfe_backend
          registry: docker.io
          dockerfile: ./spring-boot-server/Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          pushImage: false
          tags: ${{ github.sha }}
      - uses: mr-smithers-excellent/docker-build-push@v6
        id: build-image-frontend
        name: build-image-frontend
        with:
          image: wissemgh5/pfe_frontend
          registry: docker.io
          dockerfile: ./angular-14-client/Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          pushImage: false
          tags: ${{ github.sha }}
          
  update-manifest-stage:
   runs-on: ubuntu-latest
   needs: ['build_docker_images']
   environment: GITHUB
   steps:
      - uses: actions/checkout@v3
        with:
            repository: wissem1996/PFE
            ref: 'BaseImages'
            token: ${{ secrets.G_TOKEN }}
      - name: setup git config
        run: |
            git config --global user.email ${{secrets.EMAIL }}
            git config --global user.name ${{ secrets.ACTOR }}
            echo ${{ github.sha }}
            sed -i "s#wissemgh5.*#wissemgh5/pfe_backend:${{ github.sha }}#g" k8s/backend/backend-deployment.yaml
            sed -i "s#wissemgh5.*#wissemgh5/pfe_frontend:${{ github.sha }}#g" k8s/frontend/frontend-deployment.yaml
            git add -A
            git commit -am "Update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin BaseImages     
