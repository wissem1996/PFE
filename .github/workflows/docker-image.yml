name: Docker Image CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build_maven:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build the spring app
        run: mvn clean install -f ./spring-boot-server/pom.xml -DskipTests
          # Package the artifact (e.g., JAR file)
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: spring-boot-server/target/spring-boot-jpa-postgresql-0.0.1-SNAPSHOT.jar

  build_docker_compose:
    runs-on: ubuntu-latest
    environment: DOCKERHUB
    needs: [build_maven]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: app
          path: spring-boot-server/target
#      - name: Unzip Artifact
#        run: |
#         chmod 775 ./spring-boot-server/target/*
#          ls -l ./spring-boot-server/target 
#          unzip ./spring-boot-server/target/*.zip -d ./spring-boot-server/target/ |true

      - name: Unzip Artifact
        run: ls spring-boot-server/target/
      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build backend image
        with:
          image: wissemgh5/pfe_backend
          registry: docker.io
          dockerfile: ./spring-boot-server/Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build frontend image
        with:
          image: wissemgh5/pfe_frontend
          registry: docker.io
          dockerfile: ./angular-14-client/Dockerfile
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Get Image Tag
        run: echo "The image tag is ${{ steps.build-image.outputs.tag }}"
      # - name: Login to Docker Hub
      #   run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      # - name: Push Backend Image to Docker Hub
      #   run: |
      #     docker tag ${{ env.be_image_name }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.be_image_name }}
      #     fullbe_image_name="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.be_image_name }}"
      #     echo "export fullbe_image_name=$fullbe_image_name" >> $GITHUB_ENV
      #     echo ${{ env.fullbe_image_name }}
      #     docker push ${{ env.fullbe_image_name }}
      # - name: Push Frontend Image to Docker Hub
      #   run: |
      #     docker tag ${{ env.fe_image_name }} ${{ secrets.DOCKERHUB_USERNAME }}/${{env.fe_image_name}}
      #     fullfe_image_name="${{ secrets.DOCKERHUB_USERNAME }}/${{env.fe_image_name}}"
      #     echo "export fullfe_image_name=$fullfe_image_name" >> $GITHUB_ENV
      #     echo ${{ env.fullfe_image_name }}
      #     docker push ${{ env.fullfe_image_name }}
